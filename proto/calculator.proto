syntax = "proto3";

package calculator;

option go_package = "github.com/tainj/distributed_calculator2/pkg/api";

import "google/api/annotations.proto";

// ================== –û–°–ù–û–í–ù–û–ô –°–ï–†–í–ò–° ==================
service Calculator {
  // –í—ã—á–∏—Å–ª–∏—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
  rpc Calculate(CalculateRequest) returns (CalculateResponse) {
    option (google.api.http) = {
      post: "/v1/calculate"
      body: "*"
    };
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî —á–µ—Ä–µ–∑ –¢–ï–õ–û, –∫–∞–∫ —Ç—ã –ª—é–±–∏—à—å
  rpc GetResult(GetResultRequest) returns (GetResultResponse) {
    option (google.api.http) = {
      post: "/v1/result"
      body: "*"
    };
  }

  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã ‚Äî —á–µ—Ä–µ–∑ —Ç–µ–ª–æ
  rpc GetAllExamples(GetAllExamplesRequest) returns (GetAllExamplesResponse) {
    option (google.api.http) = {
      post: "/v1/examples"
      body: "*"
    };
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫—É ‚Äî —á–µ—Ä–µ–∑ —Ç–µ–ª–æ
  rpc GetCalculationTrace(GetCalculationTraceRequest) returns (GetCalculationTraceResponse) {
    option (google.api.http) = {
      post: "/v1/trace"
      body: "*"
    };
  }

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚Äî —á–µ—Ä–µ–∑ —Ç–µ–ª–æ
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/v1/register"
      body: "*"
    };
  }

  // –õ–æ–≥–∏–Ω ‚Äî —á–µ—Ä–µ–∑ —Ç–µ–ª–æ
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/login"
      body: "*"
    };
  }
}

// ================== –ú–û–î–ï–õ–ò ==================

message CalculateRequest {
  string expression = 1;
}

message CalculateResponse {
  string task_id = 1;
}

// üî• –í–ê–ñ–ù–û: task_id ‚Äî –≤ —Ç–µ–ª–µ, –Ω–µ –≤ URL, –Ω–µ –≤ query, –ù–ò–ì–î–ï –ï–©–Å
message GetResultRequest {
  string task_id = 1;
}

message GetResultResponse {
  oneof result {
    double value = 1;
    string error = 2;
  }
}

message GetAllExamplesRequest {
  // –ü—É—Å—Ç–æ ‚Äî –Ω–æ –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å
}

message GetAllExamplesResponse {
  repeated Example examples = 1;
}

message Example {
  string id = 1;
  string expression = 2;
  bool calculated = 3;
  optional double result = 4;
  string created_at = 5;
}

message GetCalculationTraceRequest {
  string task_id = 1;  // üî• –û–ü–Ø–¢–¨ –í –¢–ï–õ–ï
}

message GetCalculationTraceResponse {
  string full_expression = 1;
  repeated string steps = 2;
  optional string error = 3;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
}

message RegisterResponse {
  bool success = 1;
  string error = 2;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  bool success = 1;
  string token = 2;
  string user_id = 3;
  string username = 4;
  string error = 5;
}