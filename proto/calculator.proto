syntax = "proto3";

package calculator;

option go_package = "github.com/tainj/distributed_calculator2/pkg/api";

import "google/api/annotations.proto";

// ================== ОСНОВНОЙ СЕРВИС ==================
service Calculator {
  // Вычислить выражение
  rpc Calculate(CalculateRequest) returns (CalculateResponse) {
    option (google.api.http) = {
      post: "/v1/calculate"
      body: "*"
    };
  }

  // Получить результат — через ТЕЛО
  rpc GetResult(GetResultRequest) returns (GetResultResponse) {
    option (google.api.http) = {
      post: "/v1/result"
      body: "*"
    };
  }

  // Получить все примеры — через тело
  rpc GetAllExamples(GetAllExamplesRequest) returns (GetAllExamplesResponse) {
    option (google.api.http) = {
      post: "/v1/examples"
      body: "*"
    };
  }

  // Получить трассировку — через тело
  rpc GetCalculationTrace(GetCalculationTraceRequest) returns (GetCalculationTraceResponse) {
    option (google.api.http) = {
      post: "/v1/trace"
      body: "*"
    };
  }

  // Регистрация — через тело
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/v1/register"
      body: "*"
    };
  }

  // Логин — через тело
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/login"
      body: "*"
    };
  }
}

// ================== МОДЕЛИ ==================

message CalculateRequest {
  string expression = 1;
}

message CalculateResponse {
  string task_id = 1;
}

message GetResultRequest {
  string task_id = 1;
}

message GetResultResponse {
  oneof result {
    double value = 1;
    string error = 2;
  }
}

message GetAllExamplesRequest {}

message GetAllExamplesResponse {
  repeated Example examples = 1;
}

message Example {
  string id = 1;
  string expression = 2;
  bool calculated = 3;
  optional double result = 4;
  string created_at = 5;
}

message GetCalculationTraceRequest {
  string task_id = 1;
}

message GetCalculationTraceResponse {
  string full_expression = 1;
  repeated string steps = 2;
  optional string error = 3;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
}

message RegisterResponse {
  bool success = 1;
  string error = 2;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  bool success = 1;
  string token = 2;
  string user_id = 3;
  string error = 4;
}